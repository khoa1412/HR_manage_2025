generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =========================
// Enums
// =========================

enum gender_enum {
  male
  female
  other
}

enum period_type_enum {
  monthly
  yearly
}

enum attendance_type_enum {
  present
  absent
  late
}

enum leave_status_enum {
  pending
  approved
  rejected
}

enum absent_name_enum {
  paid_leave
  persona_leave
}

// Role enum for staff accounts (aligned with HR_db_structure.md)
enum staff_role_enum {
  staff
  chief
  hr_staff
  hr_manager
}

// =========================
// Core tables
// =========================

model staff_info {
  id              Int            @id @default(autoincrement())
  staff_code      String         @unique @db.VarChar(20)
  full_name       String         @db.VarChar(100)
  date_birth      DateTime?      @db.Date
  place_birth     String?        @db.VarChar(100)
  gender          gender_enum?
  marital_status  String?        @db.VarChar(20)
  is_active       Boolean        @default(true)

  // relations
  staff_acc            staff_acc?           @relation("StaffAccRelation")
  citizen_id           citizen_id?          @relation("CitizenIdRelation")
  contact              contact?             @relation("ContactRelation")
  emergency_contact    emergency_contact?   @relation("EmergencyContactRelation")
  tax_n_insurance      tax_n_insurance?     @relation("TaxInsuranceRelation")
  education            education[]
  certifications       certifications[]
  pos_info             pos_info[]
  salary               salary[]
  resign_info          resign_info?
  contract             contract[]
  insurances           insurances[]
  tax                  tax[]
  attendance           attendance[]
  leave_requests       leave_requests[]
}

model staff_acc {
  id             Int        @id @default(autoincrement())
  staff_name     String?    @db.VarChar(50)
  role           staff_role_enum
  acc_name       String     @unique @db.VarChar(15)
  password_hash  String     @db.VarChar(255)
  staff_code     String     @unique @db.VarChar(20)
  staff_info     staff_info? @relation("StaffAccRelation", fields: [staff_code], references: [staff_code])

  @@index([staff_code])
}

model citizen_id {
  id               Int         @id @default(autoincrement())
  staff_code       String      @unique @db.VarChar(20)
  cccd             String      @unique @db.VarChar(20)
  date_issue       DateTime?   @db.Date
  place_issue      String?     @db.VarChar(100)
  image_front_cccd String?     @db.Text
  image_back_cccd  String?     @db.Text
  staff_info       staff_info? @relation("CitizenIdRelation", fields: [staff_code], references: [staff_code])

  @@index([staff_code])
}

model contact {
  id              Int         @id @default(autoincrement())
  staff_code      String      @unique @db.VarChar(20)
  temp_address    String?     @db.Text
  permant_address String?     @db.Text
  staff_info      staff_info? @relation("ContactRelation", fields: [staff_code], references: [staff_code])
}

model emergency_contact {
  id             Int         @id @default(autoincrement())
  staff_code     String      @unique @db.VarChar(20)
  phone_number   String?     @db.VarChar(15)
  email          String?     @db.VarChar(100)
  name_emergency String?     @db.VarChar(100)
  relationship   String?     @db.VarChar(50)
  rela_phone     String?     @db.VarChar(15)
  staff_info     staff_info? @relation("EmergencyContactRelation", fields: [staff_code], references: [staff_code])
}

model tax_n_insurance {
  id              Int         @id @default(autoincrement())
  staff_code      String      @unique @db.VarChar(20)
  social_insuran  String?     @db.VarChar(20)
  tax_code        String?     @unique @db.VarChar(20)
  staff_info      staff_info? @relation("TaxInsuranceRelation", fields: [staff_code], references: [staff_code])
}

model education {
  id                Int         @id @default(autoincrement())
  staff_code        String      @db.VarChar(20)
  degree            String?     @db.VarChar(100)
  institution       String?     @db.VarChar(100)
  major             String?     @db.VarChar(100)
  year              Int?
  attachment_image  String?     @db.Text
  staff_info        staff_info  @relation(fields: [staff_code], references: [staff_code], map: "education_staff_info_fkey")

  @@index([staff_code])
}

model certifications {
  id                Int         @id @default(autoincrement())
  staff_code        String      @db.VarChar(20)
  language          String?     @db.VarChar(50)
  level             String?     @db.VarChar(50)
  score             Decimal?    @db.Decimal(5, 2)
  attachment_image  String?     @db.Text
  issue_at          DateTime?   @db.Date
  expires_at        DateTime?   @db.Date
  staff_info        staff_info  @relation(fields: [staff_code], references: [staff_code], map: "certifications_staff_info_fkey")

  @@index([staff_code])
}

model department {
  department_id  Int       @id @default(autoincrement())
  department_name String   @db.VarChar(100)
  description    String?
  day_create     DateTime  @default(now()) @db.Date

  pos_info       pos_info[]
}

model pos_info {
  id             Int         @id @default(autoincrement())
  staff_code     String      @db.VarChar(20)
  department_id  Int?
  position       String?     @db.VarChar(100)
  effective_date DateTime?   @db.Date
  staff_info     staff_info  @relation(fields: [staff_code], references: [staff_code], map: "pos_info_staff_info_fkey")
  department     department? @relation(fields: [department_id], references: [department_id], map: "pos_info_department_fkey")

  @@index([staff_code])
  @@index([department_id])
}

model salary {
  id             Int         @id @default(autoincrement())
  staff_code     String      @db.VarChar(20)
  base_salary    Decimal     @db.Decimal(12, 2)
  perform_bonus  Decimal?    @db.Decimal(12, 2)
  effective_date DateTime?   @db.Date
  staff_info     staff_info  @relation(fields: [staff_code], references: [staff_code], map: "salary_staff_info_fkey")

  @@index([staff_code])
}

model resign_info {
  id                     Int        @id @default(autoincrement())
  staff_code             String     @unique @db.VarChar(20)
  leave_day              DateTime?  @db.Date
  items_employee         String?    @db.Text
  items_company          String?    @db.Text
  social_insuran_detach  String?    @db.Text
  terminate_decision     String?    @db.Text
  tax_withhold_paper     String?    @db.Text
  staff_info             staff_info @relation(fields: [staff_code], references: [staff_code], map: "resign_info_staff_info_fkey")
}

model contract_types {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(50)
  description String?
  contract    contract[]
}

model contract {
  id            Int             @id @default(autoincrement())
  staff_code    String          @db.VarChar(20)
  type          Int?
  start_date    DateTime?       @db.Date
  end_date      DateTime?       @db.Date
  staff_info    staff_info      @relation(fields: [staff_code], references: [staff_code], map: "contract_staff_info_fkey")
  contract_type contract_types? @relation(fields: [type], references: [id])

  @@index([staff_code])
  @@index([type])
}

model insurances {
  id                   Int        @id @default(autoincrement())
  staff_code           String?    @db.VarChar(20)
  month                DateTime   @db.Date
  staff_bhxh           Decimal?   @db.Decimal(12, 2)
  staff_bhyt           Decimal?   @db.Decimal(12, 2)
  staff_bhtn           Decimal?   @db.Decimal(12, 2)
  company_contribution Decimal?   @db.Decimal(12, 2)
  created_by           String?    @db.VarChar(20)
  staff_info           staff_info? @relation(fields: [staff_code], references: [staff_code], map: "insurances_staff_info_fkey")

  @@index([staff_code])
}

model tax {
  id           Int              @id @default(autoincrement())
  staff_code   String           @db.VarChar(20)
  tax_type     String?          @db.VarChar(50)
  period_type  period_type_enum
  amount       Decimal?         @db.Decimal(12, 2)
  dependents   Int              @default(0)
  update_at    DateTime         @default(now()) @db.Timestamp(6)
  created_by   String?          @db.VarChar(20)
  staff_info   staff_info       @relation(fields: [staff_code], references: [staff_code], map: "tax_staff_info_fkey")

  @@index([staff_code])
}

model absent {
  id          Int             @id @default(autoincrement())
  name        absent_name_enum
  description String?
  leave_requests leave_requests[]
}

model leave_requests {
  id         Int               @id @default(autoincrement())
  staff_code String            @db.VarChar(20)
  start_date DateTime?         @db.Date
  end_date   DateTime?         @db.Date
  note       String?
  status     leave_status_enum
  req_at     DateTime          @default(now()) @db.Timestamp(6)
  absent_id  Int?
  staff_info staff_info        @relation(fields: [staff_code], references: [staff_code], map: "leave_requests_staff_info_fkey")
  absent     absent?           @relation(fields: [absent_id], references: [id], map: "leave_requests_absent_fkey")
  attendance attendance[]

  @@index([staff_code])
  @@index([absent_id])
}

model attendance {
  id           Int                  @id @default(autoincrement())
  staff_code   String               @db.VarChar(20)
  checkin      DateTime?
  checkout     DateTime?
  atten_type   attendance_type_enum
  leave_req_id Int?
  staff_info   staff_info           @relation(fields: [staff_code], references: [staff_code], map: "attendance_staff_info_fkey")
  leave_req    leave_requests?      @relation(fields: [leave_req_id], references: [id], map: "attendance_leave_requests_fkey")

  @@index([staff_code])
  @@index([leave_req_id])
}